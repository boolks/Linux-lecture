리눅스 5일차 강의 메모 정리

sizeof - 메모리 할당 크기(byte를 나타냄)
문자열은 NULL문자를 마지막에 포함하고 있음. 따라서 문자열 5개 (ex. "korea")를 저장하기 위해서는 6개의 공간이 필요
literal상수 - 문자, 숫자 그대로의 값. data segment에 저장되어 있음 (ex. int k = 10 일 떄 k는 변수, 10은 literal)
----------------------------------------------------------------------------------------------------------------------------------------

문자열 처리 함수(string.h) 정리
※ 문자열은 번지수로 저장되어있음

strlen(a1) - 문자열 a1의 길이를 출력하는 함수
strcpy(a1, a2) - a1의 문자열을 a2로 복사하는 함수
strcmp(a1, a2) - a1과 a2의 문자열의 크기를 비교하는 함수 (a1이 크면 1, a2가 크면 -1, 같으면 0으로 return값을 반환)
strcat(a1, a2) - a1의 문자열의 마지막에 a2문자열을 연결하는 함수 (ex. strcat("korea", "seoul") -> koreaseoul)
----------------------------------------------------------------------------------------------------------------------------------------

비트연산의 음수 표기법 관련 정리

1. 부호와 절대값
부호를 나타낼 때 0은 양수 1은 음수, 2진수의 맨 앞 비트는 부호비트

기수(Radix) <- 숫자 자리 표시법의 가중값. 10진수의 기수 = 10, 8진수의 기수 = 8
보수(Complement) - 자리 올림(carriage)이 발생하는 수

2. 1의 보수
2진수가 자리올림이 발생하기 전 1로 전부 채워지는 수 (ex. 0011의 1의 보수 = 1100)

3. 2의 보수
2진수에서 자리올림이 발생하는 수 (ex. 0011의 2의 보수 = 1100 + 1 -> 1101)

ex. -2의 2진수 표기법
양수 4의 2진수를 먼저 표기(0010)
2진수에 대한 1의 보수 표기(1101)
2진수에 대한 2의 보수 표기(1110)

 0 - 0000 0000
 ~0 - (1)111 1111 -> 000 0000 + 1 = 000 0001 -> -1
 
 6 = 0000 0110
 ~6 = 1111 1001 -> 000 0110 + 1 = 000 0111 -> -7
----------------------------------------------------------------------------------------------------------------------------------------

구조체(Structure)
서로 다른 자료형을 갖는 자료들을 하나의 집합으로 정의하여 사용하는 자료형. (사용자 정의 자료형)
선언
typedef struct 구조체명{
      데이터타입 멤버변수;
      int age;
};

호출 시 p1.age으로 변수 호출 
----------------------------------------------------------------------------------------------------------------------------------------

함수
int sum(int x, int y){
  return x + y;
}

int main(){
  sum(5, 3);
}

return type (반환값의 형태) -> int
return value (반환값) -> x + y
parameter (매개변수) -> int x, int y
argument (전달변수, 전달인자) -> 5, 3

library function(표준함수, 내장함수, 시스템 제공함수)
stdio.h, stdlib.h, string.h, math.h, etc...
